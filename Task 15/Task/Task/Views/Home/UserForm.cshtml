@using System.Web.Optimization
@model Task.Models.UserViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />

    @Styles.Render("~/Content/css")

    <title>User form</title>
</head>
<body>
    @Html.AntiForgeryToken()

    

        <div class="row">
            <div class="col"></div>
            <div class="col" style="border: 1px solid black; margin-top: 1%">

                <form method="post" id="UserForm">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @Html.HiddenFor(m => m.Id)

                    @Html.HiddenFor(m => m.IsRegistered)

                    <div class="row" style="margin-top: 3%">
                        <div class="col-5">
                            Name
                        </div>

                        <div class="col">
                            @Html.EditorFor(m => m.Name)
                            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="margin-top: 1%">
                        <div class="col-5">
                            Middle name
                        </div>

                        <div class="col">
                            @Html.EditorFor(m => m.MiddleName)
                            @Html.ValidationMessageFor(m => m.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="margin-top: 1%">
                        <div class="col-5">
                            Last name
                        </div>

                        <div class="col">
                            @Html.EditorFor(m => m.LastName)
                            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="margin-top: 1%">
                        <div class="col-5">
                            Email
                        </div>

                        <div class="col">
                            @if (!Model.IsRegistered)
                            {
                                @Html.EditorFor(m => m.Email)
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.Email, new { @readonly = "readonly" })
                            }
                        </div>
                    </div>

                    <div class="row" style="margin-top: 1%">
                        <div class="col-5">
                            Password
                        </div>

                        <div class="col">
                            @if (!Model.IsRegistered)
                            {
                                @Html.EditorFor(m => m.Password)
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                            }
                            else
                            {
                                @Html.TextBoxFor(m => m.Password, new { @readonly = "readonly" })
                            }
                        </div>
                    </div>

                    <div class="row" style="margin-top: 1%">
                        @if (!Model.IsRegistered)
                        {
                            <div class="col-5">
                                Password confirm
                            </div>

                            <div class="col">
                                @Html.EditorFor(m => m.PasswordConfirm)
                                @Html.ValidationMessageFor(m => m.PasswordConfirm, "", new { @class = "text-danger" })
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(m => m.PasswordConfirm)
                        }
                    </div>

                    <div class="row" style="margin-top: 1%">
                        <div class="col-5">
                            Age
                        </div>

                        <div class="col">
                            @Html.EditorFor(m => m.Age)
                            @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="margin-top: 1%">
                        <div class="col-5">
                            Phone
                        </div>

                        <div class="col">
                            @Html.EditorFor(m => m.Phone)
                            @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="row" style="margin-top: 1%">
                        <div class="col-5">
                            Address
                        </div>

                        <div class="col">
                            @Html.EditorFor(m => m.Address)
                            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </form>

                <div class="row" style="margin-top: 3%; margin-bottom: 3%">
                    <div class="col">

                        @if (!Model.IsRegistered)
                        {
                            <input type="submit" form="UserForm" formaction="~/Home/UserForm" value="Add" />
                        }
                        else
                        {
                            <input type="submit" form="UserForm" formaction="~/Home/UserForm" value="Update" />
                        }

                    </div>

                    <div class="col">

                        <form method="get">
                            <input type="submit" formaction="~/Home/Index" value="Cancel" />
                        </form>

                    </div>
                </div>

            </div>
            <div class="col"></div>
        </div>
    }

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
</body>
</html>